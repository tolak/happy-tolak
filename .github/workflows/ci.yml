name: Tolak CI
on:
  pull_request:
    branches:
      - master
      - release-**
    paths-ignore:
      - '**/README.md'
  push:
    branches:
      - master
      - release-**
    paths-ignore:
      - '**/README.md'
jobs:
  clean-up-actions:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        # Only cancel non-master branch runs
        if: ${{ github.ref != 'refs/heads/master' }}
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
  build:
    runs-on: [self-hosted, linux]
    env:
      SCCACHE_CACHE_SIZE: "50G"
      CARGO_INCREMENTAL: 0
    needs: clean-up-actions
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-11-07
          components: rustfmt
          target: wasm32-unknown-unknown
          default: true
      - name: Check format
        run: cargo fmt --all -- --check
      - name: Build
        run: cargo build --release
      - name: Install clippy
        run: rustup component add clippy
      - name: Run clippy
        run: cargo clippy -- -D warnings
  benchmarking:
    runs-on: [self-hosted, linux]
    env:
      SCCACHE_CACHE_SIZE: "50G"
      CARGO_INCREMENTAL: 0
    needs: clean-up-actions
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-11-07
          components: rustfmt
          target: wasm32-unknown-unknown
          default: true
      - name: Run benchmarking tests
        run: make test-benchmarking
  checks-and-tests:
    runs-on: [self-hosted, linux]
    env:
      SCCACHE_CACHE_SIZE: "50G"
      CARGO_INCREMENTAL: 0
    needs: clean-up-actions
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-11-07
          components: rustfmt
          target: wasm32-unknown-unknown
          default: true
      - name: Run tests
        run: cargo test
  e2e-tests:
    runs-on: [self-hosted, linux]
    env:
      SCCACHE_CACHE_SIZE: "50G"
      CARGO_INCREMENTAL: 0
    needs: clean-up-actions
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-11-07
          components: rustfmt
          target: wasm32-unknown-unknown
          default: true
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Run e2e tests
        run: |
          npm install -g yarn
          node e2e/index.js